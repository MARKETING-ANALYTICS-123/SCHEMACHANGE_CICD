name: snowflake-devops-demo

on:
  # Trigger on changes to the DEV branch (create PR from DEV to PROD)
  push:
    branches:
      - DEV  # Jab DEV me push hoga, tab PR for PROD generate hoga
    paths:
      - 'dbscripts2/**'  # Ye check karega ki dbscripts2 folder me koi file change hui ho

  # Trigger on pull request creation or update for PROD branch
  pull_request:
    branches:
      - PROD  # Jab PR PROD ke liye banega, tab workflow run hoga

  workflow_dispatch:  # Manual trigger ka option bhi hai agar aap chahein

jobs:
  deploy-snowflake-changes-job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install snowflake-connector-python

      - name: Deploy SQL files, Archive, and Clean up
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
        run: |
          python deploy_sql_files.py  # Ye deploy, archive aur cleanup script ko run karega

      - name: Commit & Push changes
        env:
          TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git remote set-url origin https://x-access-token:${TOKEN}@github.com/${{ github.repository }}
          git add .
          git commit -m "Auto deploy, archive old versions, and clean up archive" || echo "No changes"
          git push
