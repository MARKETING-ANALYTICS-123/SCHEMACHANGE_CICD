name: Snowflake CI/CD Deploy (DEV)

on:
  push:
    branches:
      - DEV

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install snowflake-connector-python jq cryptography

      - name: Get changed SQL files
        id: get-changed
        run: |
          git fetch origin DEV --depth=2
          PREV_COMMIT=$(git rev-parse HEAD^)
          changed_files=$(git diff --name-only $PREV_COMMIT HEAD | grep '\.sql$' || true)
          if [ -z "$changed_files" ]; then
            echo "No changed .sql files found, exiting."
            exit 0
          fi
          echo "CHANGED_FILES=$(echo $changed_files | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Detect project from first changed file
        id: detect-project
        run: |
          first_file=$(echo "${{ env.CHANGED_FILES }}" | awk '{print $1}')
          project=$(echo "$first_file" | cut -d'/' -f2)
          if [ -z "$project" ]; then
            echo "❌ Could not detect project name."
            exit 1
          fi
          echo "PROJECT=$project" >> $GITHUB_ENV

      - name: Save private key from secret
        run: |
          mkdir -p keys
          echo "${{ secrets.MARKETING_PRIVATE_KEY }}" | tr -d '\r' > keys/temp_key_dev.p8
        shell: bash

      - name: Run deployment script for DEV
        env:
          CHANGED_FILES: ${{ env.CHANGED_FILES }}
          PROJECT: ${{ env.PROJECT }}
          CONFIG_FILE: configs/${{ env.PROJECT }}.json
          KEY_PATH: keys/temp_key_dev.p8
          ENV: dev
        run: |
          python deploy_sql_files.py \
            --project "$PROJECT" \
            --files "$CHANGED_FILES" \
            --config_file "$CONFIG_FILE" \
            --key_path "$KEY_PATH" \
            --env "$ENV" \
            --replacements "_DEV=_PRD"
