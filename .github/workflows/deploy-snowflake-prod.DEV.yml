name: Deploy to DEV and Create PR to PROD

on:
  push:
    branches: [DEV]
    paths: ['dbscripts2/**']
  workflow_dispatch:

jobs:
  deploy-and-archive:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout full repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install snowflake-connector-python

      - name: Ensure archive folder exists
        run: mkdir -p archive

      - name: Get list of changed files
        id: changes
        run: |
          git fetch origin PROD
          CHANGED_FILES=$(git diff --name-only origin/PROD...HEAD | grep '.sql$' || true)
          echo "CHANGED_FILES<<EOF" >> $GITHUB_ENV
          echo "$CHANGED_FILES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Deploy to DEV and Archive Old Files
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.DEV_SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.DEV_SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.DEV_SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.DEV_SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.DEV_SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.DEV_SNOWFLAKE_DATABASE }}
          CHANGED_FILES: ${{ env.CHANGED_FILES }}
        run: python deploy_sql_files.py

      - name: Create Pull Request from DEV to PROD
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh auth status
          gh pr create \
            --title "ðŸš€ Promote DEV to PROD" \
            --body "This PR promotes changes from DEV to PROD" \
            --base PROD \
            --head DEV \
            || echo "PR already exists or nothing to PR"
