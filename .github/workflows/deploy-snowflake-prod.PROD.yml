name: Snowflake CI/CD Deploy

on:
  push:
    branches:
      - PROD
  pull_request:
    branches:
      - PROD

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Detect changed SQL files and project
        id: detect-changes
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE=${{ github.event.pull_request.base.sha }}
            HEAD=${{ github.event.pull_request.head.sha }}
          else
            git fetch origin PROD --depth=2
            BASE=$(git rev-parse HEAD^)
            HEAD=HEAD
          fi

          echo "Base SHA: $BASE"
          echo "Head SHA: $HEAD"

          changed=$(git diff --name-only "$BASE" "$HEAD" | grep '\.sql$' || true)

          if [[ -z "$changed" ]]; then
            echo "No changed .sql files, exiting."
            exit 0
          fi

          echo "Changed files: $changed"
          echo "CHANGED_FILES=$(echo "$changed" | tr '\n' ' ')" >> $GITHUB_ENV

          first_file=$(echo "$changed" | head -n 1)
          project=$(echo "$first_file" | cut -d'/' -f2)
          echo "PROJECT=$project" >> $GITHUB_ENV
          echo "Detected project: $project"

      - name: Load config and save private key
        run: |
          echo "Project: $PROJECT"
          CONFIG_FILE="configs/${PROJECT}.json"
          echo "CONFIG_FILE=$CONFIG_FILE" >> $GITHUB_ENV

          if [ ! -f "$CONFIG_FILE" ]; then
            echo "❌ Config file not found: $CONFIG_FILE"
            exit 1
          fi

          # Extract key_path from JSON config
          key_path=$(jq -r '.key_path' "$CONFIG_FILE")
          echo "Key path from config: $key_path"

          # Get directory and ensure it exists
          key_dir=$(dirname "$key_path")
          mkdir -p "$key_dir"

          # Fetch key from secret
          UPPER=$(echo "$PROJECT" | tr '[:lower:]' '[:upper:]')
          SECRET_NAME="${UPPER}_PRIVATE_KEY"
          echo "Using secret: $SECRET_NAME"
          echo "${{ secrets[SECRET_NAME] }}" > "$key_path"
          echo "✅ Private key saved to $key_path"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install snowflake-connector-python cryptography

      - name: Run deployment script
        run: |
          echo "Deploying project $PROJECT with changed files:"
          echo "$CHANGED_FILES"
          python deploy_sql_files.py
        env:
          CONFIG_FILE: configs/${{ env.PROJECT }}.json
          CHANGED_FILES: ${{ env.CHANGED_FILES }}
