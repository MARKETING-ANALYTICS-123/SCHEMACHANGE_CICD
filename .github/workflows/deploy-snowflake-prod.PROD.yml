name: Deploy to PROD Snowflake

on:
  push:
    branches: [PROD]
    paths:
      - 'dbscripts2/**'
  workflow_dispatch:

jobs:
  deploy-to-prod:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install Python dependencies
        run: pip install snowflake-connector-python cryptography

      - name: Fetch PROD branch for diff
        run: git fetch origin PROD --depth=2

      - name: Get changed .sql files in dbscripts2 folder
        id: changed-files
        run: |
          CHANGED_FILES=$(git diff --name-only origin/PROD HEAD -- dbscripts2/**/*.sql || echo "")
          echo "Changed .sql files:"
          echo "$CHANGED_FILES"
          if [ -z "$CHANGED_FILES" ]; then
            echo "❌ No changed .sql files found."
            exit 1
          fi
          echo "::set-output name=files::$CHANGED_FILES"

      - name: Extract project name from first changed file
        id: extract-project
        run: |
          first_file=$(echo "${{ steps.changed-files.outputs.files }}" | head -n1)
          echo "First changed file: $first_file"
          if [ -z "$first_file" ]; then
            echo "❌ Could not detect project name from changed files."
            exit 1
          fi
          project=$(echo "$first_file" | cut -d'/' -f2)
          echo "Detected project: $project"
          echo "::set-output name=project::$project"
          echo "::set-output name=changed_files::${{ steps.changed-files.outputs.files }}"

      - name: Write private key to file
        run: |
          PROJECT_UPPER=$(echo "${{ steps.extract-project.outputs.project }}" | tr '[:lower:]' '[:upper:]')
          SECRET_NAME="${PROJECT_UPPER}_PRIVATE_KEY"
          echo "Using secret: $SECRET_NAME"
          # Using GitHub environment variable syntax with bash indirection
          PRIVATE_KEY="${{ secrets[SECRET_NAME] }}"
          if [ -z "$PRIVATE_KEY" ]; then
            echo "❌ Secret $SECRET_NAME not found. Please add it to GitHub secrets."
            exit 1
          fi
          mkdir -p keys
          echo "$PRIVATE_KEY" > keys/temp_key.p8
          chmod 600 keys/temp_key.p8

      - name: Deploy SQL files to Snowflake
        env:
          CHANGED_FILES: ${{ steps.extract-project.outputs.changed_files }}
          PROJECT: ${{ steps.extract-project.outputs.project }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_PRIVATE_KEY_PATH: keys/temp_key.p8
        run: |
          echo "Deploying project $PROJECT with changed files:"
          echo "$CHANGED_FILES"
          python deploy_sql_files.py --project "$PROJECT" --files "$CHANGED_FILES"
