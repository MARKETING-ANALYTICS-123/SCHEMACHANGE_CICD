name: Snowflake CI/CD Deploy

on:
  push:
    branches:
      - PROD
  pull_request:
    branches:
      - PROD

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Get changed SQL files
        id: detect-changes
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE=${{ github.event.pull_request.base.sha }}
            HEAD=${{ github.event.pull_request.head.sha }}
          else
            git fetch origin PROD --depth=2
            BASE=$(git rev-parse HEAD^)
            HEAD=HEAD
          fi

          echo "Base SHA: $BASE"
          echo "Head SHA: $HEAD"

          changed=$(git diff --name-only "$BASE" "$HEAD" | grep '\.sql$' || true)
          if [[ -z "$changed" ]]; then
            echo "No changed .sql files, exiting."
            exit 0
          fi

          echo "CHANGED_FILES=$(echo $changed | tr '\n' ' ')" >> $GITHUB_ENV
          first_file=$(echo "$changed" | head -n 1)
          project=$(echo "$first_file" | cut -d'/' -f2)
          echo "PROJECT=$project" >> $GITHUB_ENV

      - name: Set config file path and extract private key
        run: |
          echo "Using project: $PROJECT"
          CONFIG_FILE="configs/${PROJECT}.json"
          echo "CONFIG_FILE=$CONFIG_FILE" >> $GITHUB_ENV

          if [ ! -f "$CONFIG_FILE" ]; then
            echo "❌ Config file not found: $CONFIG_FILE"
            exit 1
          fi

          echo "Reading private key from secret..."
          SECRET_NAME=$(echo "${PROJECT}_PRIVATE_KEY" | tr '[:lower:]' '[:upper:]')
          echo "SECRET_NAME=$SECRET_NAME"

          PRIVATE_KEY="${{ secrets[format('{0}_PRIVATE_KEY', env.PROJECT | upper)] }}"
          if [ -z "$PRIVATE_KEY" ]; then
            echo "❌ Private key not found in secrets."
            exit 1
          fi

          mkdir -p keys
          echo "$PRIVATE_KEY" > keys/temp_key.p8
          echo "✅ Private key saved to keys/temp_key.p8"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install snowflake-connector-python cryptography

      - name: Run deployment script
        run: |
          echo "Deploying project $PROJECT with changed files:"
          echo "$CHANGED_FILES"
          CONFIG_FILE="configs/${PROJECT}.json"
          python deploy_sql_files.py
        env:
          CONFIG_FILE: configs/${{ env.PROJECT }}.json
          CHANGED_FILES: ${{ env.CHANGED_FILES }}
