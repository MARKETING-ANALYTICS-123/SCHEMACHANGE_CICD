name: Deploy to PROD and Archive

on:
  push:
    branches: [PROD]
    paths: ['dbscripts2/**']
  workflow_dispatch:

jobs:
  deploy-and-archive-prod:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: pip install snowflake-connector-python

      - name: Deploy to PROD and Archive Old Files
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
        run: python deploy_sql_files.py

      - name: Commit archive files to PROD branch
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }}

          git add archive/*.sql || true
          if git diff --cached --quiet; then
            echo "No archive changes to commit."
          else
            git commit -m "ðŸ“¦ Archived old SQL files during PROD deployment"
            git push origin PROD
          fi
