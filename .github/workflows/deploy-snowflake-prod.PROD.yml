name: Snowflake CI/CD Deploy

on:
  pull_request:
    branches:
      - PROD
  push:
    branches:
      - PROD

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
      SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
      SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
      SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Get changed SQL files (PR)
        if: github.event_name == 'pull_request'
        id: get-changed-pr
        run: |
          echo "Base SHA: ${{ github.event.pull_request.base.sha }}"
          echo "Head SHA: ${{ github.event.pull_request.head.sha }}"

          changed_files=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} | grep '\.sql$' || true)
          echo "Changed files found: $changed_files"

          if [ -z "$changed_files" ]; then
            echo "No changed .sql files found, exiting."
            exit 0
          fi

          echo "CHANGED_FILES=$(echo $changed_files | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Get changed SQL files (push to PROD)
        if: github.event_name == 'push' && github.ref == 'refs/heads/PROD'
        id: get-changed-push
        run: |
          git fetch origin PROD --depth=2
          PREV_COMMIT=$(git rev-parse HEAD^)
          echo "Previous commit: $PREV_COMMIT"

          changed_files=$(git diff --name-only $PREV_COMMIT HEAD | grep '\.sql$' || true)
          echo "Changed files found: $changed_files"

          if [ -z "$changed_files" ]; then
            echo "No changed .sql files found, exiting."
            exit 0
          fi

          echo "CHANGED_FILES=$(echo $changed_files | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Detect project from first changed file
        id: detect-project
        run: |
          echo "Changed files: $CHANGED_FILES"
          first_file=$(echo "$CHANGED_FILES" | awk '{print $1}')
          echo "First changed file: $first_file"
          project=$(echo "$first_file" | cut -d'/' -f2)
          if [ -z "$project" ]; then
            echo "❌ Could not detect project name from changed files."
            exit 1
          fi
          echo "PROJECT=$project" >> $GITHUB_ENV

      - name: Set private key based on project
        id: set-private-key
        run: |
          PROJECT_UPPER=$(echo "$PROJECT" | tr '[:lower:]' '[:upper:]')
          echo "Detected project: $PROJECT_UPPER"
          if [ "$PROJECT_UPPER" = "MARKETING" ]; then
            echo "PRIVATE_KEY=${{ secrets.MARKETING_PRIVATE_KEY }}" >> $GITHUB_ENV
          elif [ "$PROJECT_UPPER" = "SALES" ]; then
            echo "PRIVATE_KEY=${{ secrets.SALES_PRIVATE_KEY }}" >> $GITHUB_ENV
          elif [ "$PROJECT_UPPER" = "FINANCE" ]; then
            echo "PRIVATE_KEY=${{ secrets.FINANCE_PRIVATE_KEY }}" >> $GITHUB_ENV
          else
            echo "❌ Unknown project $PROJECT_UPPER"
            exit 1
          fi

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install snowflake-connector-python cryptography

      - name: Run deployment script
        env:
          CHANGED_FILES: ${{ env.CHANGED_FILES }}
          PROJECT: ${{ env.PROJECT }}
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_ROLE: ${{ secrets.SNOWFLAKE_ROLE }}
          SNOWFLAKE_PRIVATE_KEY: ${{ env.PRIVATE_KEY }}
        run: |
          echo "Deploying project $PROJECT with changed files:"
          echo "$CHANGED_FILES"
          python deploy_sql_files.py --project "$PROJECT" --files "$CHANGED_FILES"
